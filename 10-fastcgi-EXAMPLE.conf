## FastCGI programs have the same functionality as CGI programs,
## but are considerably faster through lower interpreter startup
## time and socketed communication
##
## Documentation: /usr/share/doc/lighttpd-doc/fastcgi.txt.gz
##                http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs:ConfigurationOptions#mod_fastcgi-fastcgi

server.modules   += ( "mod_fastcgi" )
fastcgi.debug = 1
fastcgi.server = (
    "/project.fcgi" =>
    (
        "django-fcgi" =>
        (
         "socket" => "/tmp/pp-dataservice-fcgi.sock",
         "check-local" => "disable",
        )
    )
)
$HTTP["url"] =~ "^/dl.*" {
        connection.kbytes-per-second=50
        secdownload.secret          = "ugeaptuk6"
        secdownload.document-root   = "/var/mserve/www-root/dl"
        secdownload.uri-prefix      = "/dl/"
        secdownload.timeout         = 60
}
$HTTP["url"] =~ "^/dl50" {
        connection.kbytes-per-second=50
        secdownload.secret          = "ugeaptuk6"
        secdownload.document-root   = "/var/mserve/www-root/dl50"
        secdownload.uri-prefix      = "/dl50/"
        secdownload.timeout         = 60
}
$HTTP["url"] =~ "^/dl100" {
        connection.kbytes-per-second=100
        secdownload.secret          = "ugeaptuk6"
        secdownload.document-root   = "/var/mserve/www-root/dl100"
        secdownload.uri-prefix      = "/dl100/"
        secdownload.timeout         = 60
}
$HTTP["url"] =~ "^/dl3000" {
        connection.kbytes-per-second=3000
        secdownload.secret          = "ugeaptuk6"
        secdownload.document-root   = "/var/mserve/www-root/dl100"
        secdownload.uri-prefix      = "/dl3000/"
        secdownload.timeout         = 60
}

url.rewrite-once = (
    "^(/dl100.*)$" => "$1",
    "^(/dl.*)$" => "$1",
    "^(/media.*)$" => "$1",
    "^(/mservemedia.*)$" => "$1",
    "^(/mservethumbs.*)$" => "$1",
    "^(/mservedata.*)$" => "$1",
    "^/favicon\.ico$" => "/media/favicon.ico",
    "^(/.*)$" => "/project.fcgi$1",
)

