#! /bin/sh
### BEGIN INIT INFO
# Provides:	     mserve
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       MSERVE service
# Short-Description: Enable MSERVE service 
### END INIT INFO

# Author: Foo Bar <foobar@baz.org>
#
# Please remove the "Author" lines above and replace them
# with your own name if you copy and modify this script.

# Do NOT "set -e"

PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME=mserve-init
MSERVE_HOME=/opt/mserve
DAEMON=$MSERVE_HOME/manage.py
DESC="mserve service"
USER=www-data
INIT_LOG_DIR=/var/log/mserve
SCRIPTNAME=/etc/init.d/$NAME

PIDFILE="/tmp/mserve.pid"
SOCKET="/tmp/mserve-fcgi.sock"

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh
. /lib/lsb/init-functions

do_start() {
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	if [ ! -f $PIDFILE ]; then
		sudo -u www-data $DAEMON runfcgi --pythonpath="${MSERVE_HOME}" socket=$SOCKET \
			pidfile=$PIDFILE || return 2
		sudo -u www-data chmod 777 $SOCKET
		log_daemon_msg "Starting mserve server"
		return 0
	else
		log_daemon_msg "mserve is already running"
		return 1
	fi
}

do_stop() {
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
	log_daemon_msg "Stopping mserve processes"
	if [ -f $PIDFILE ]; then
		sudo -u www-data kill `cat -- $PIDFILE`
		RETVAL="$?"
		sudo -u www-data rm -f -- $PIDFILE
	else
		return 1
	fi
	return $RETVAL
}

do_status() {
	if [ -f $PIDFILE ]; then
		echo "running"
	else
		echo "stopped"
	fi
}


case "$1" in
    start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
        ;;
    stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
        ;;
    status)
	do_status
        ;;
    restart)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) 
			do_start
			case "$?" in
				0) log_end_msg 0 ;;
				1) log_end_msg 1 ;; # Old process is still running
				*) log_end_msg 1 ;; # Failed to start
			esac
			;;
		*)
			# failed to stop
			log_end_msg 1
			;;
	esac
        ;;
    *)
        echo "Usage: $0 {{start|stop|status|restart}" >&2
        exit 3
        ;;
esac

:
