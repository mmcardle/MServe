#Tue Feb 22 14:56:16 GMT 2011

#################################################
#PART I
#Installing prerequisites for Ubuntu 10.10 server
# 
#################################################
#
# At this point we assume the following:
# mserve username: www-data
# mysql root password: pass
# installation directory /opt/mserve
#
#################################################

# upgrade system
sudo apt-get update
sudo apt-get -y upgrade

sudo reboot

# install basic prerequisites
sudo apt-get -y install lighttpd git-core mercurial ffmpegthumbnailer wget

sudo apt-get -y install rabbitmq-server

sudo apt-get -y install erlang-inets
sudo apt-get -y install erlang-asn1 erlang-corba erlang-docbuilder erlang-edoc 
sudo apt-get -y install erlang-eunit erlang-ic erlang-inviso erlang-odbc erlang-parsetools 
sudo apt-get -y install erlang-percept erlang-ssh erlang-tools erlang-webtool erlang-xmerl 
sudo apt-get -y install erlang-nox

sudo apt-get -y install python-django python-setuptools python-flup python-magic python-imaging python-pycurl

wget  http://security.debian.org/debian-security/pool/updates/main/p/python-django/python-django_1.2.3-3+squeeze1_all.deb

sudo dpkg -i python-django_1.2.3-3+squeeze1_all.deb

#rm python-django_1.2.3-3+squeeze1_all.deb

# need to update to the latest version of rabbitmq, i.e. 2.3.1
wget http://www.rabbitmq.com/releases/rabbitmq-server/v2.3.1/rabbitmq-server_2.3.1-1_all.deb

sudo dpkg -i rabbitmq-server_2.3.1-1_all.deb

#rm rabbitmq-server_2.3.1-1_all.deb


# MySQL installation
# during installation set MySQL root password, we assume it is pass 
# 
# in order to avoid mysql prompts it can be installed as:
sudo apt-get -y install debconf-utils

MYSQL_ROOT_PWD=pass
echo "mysql-server-5.1 mysql-server/root_password password $MYSQL_ROOT_PWD" > mysql.preseed
echo "mysql-server-5.1 mysql-server/root_password_again password $MYSQL_ROOT_PWD" >> mysql.preseed
echo "mysql-server-5.1 mysql-server/start_on_boot boolean true" >> mysql.preseed
cat mysql.preseed | sudo debconf-set-selections

sudo apt-get -y install mysql-server python-mysqldb


########
#PART II
# MSERVE configuration

# Create mservedb database
echo "CREATE DATABASE mservedb;" | mysql -u root -ppass

# create a temp directory and install mserve components here
cd 
mkdir mserve
cd mserve

#Install django-oauth
hg clone http://bitbucket.org/david/django-oauth
cd django-oauth
sudo python setup.py install
cd ..

# Install django-piston
hg clone http://bitbucket.org/jespern/django-piston
cd django-piston
sudo python setup.py install
cd ..

# Install django-celery
git clone https://github.com/ask/django-celery.git
cd  django-celery
sudo python setup.py install
cd ..

# Install pp-dataservice
git clone git://soave.it-innovation.soton.ac.uk/git/pp-dataservice
cd pp-dataservice
# checkout mm version
git checkout mm-pp-dataservice

# Configuring MSERVE in standalone mode
sudo mkdir -p /var/mserve/www-root
#sudo chown pmel:pmel /var/mserve (if we use sqlite3)
sudo chown -R www-data:www-data /var/mserve


# Edit pp-dataservice/mserve/settings.py and update "TEMPLATE_DIRS"  and "DATABASE_NAME" to an appropriate directory, BROKER_HOST needs to be updated too, it is better if we use the settings from myuser ...


# lighttpd configuration 
# edit /etc/lighttpd/lighttpd.conf
# enable mod_rewrite
# set root directory to /var/mserve/www-root/
sudo -i 
if [ -f /etc/lighttpd/lighttpd.conf-original ]; then
	cp /etc/lighttpd/lighttpd.conf-original /etc/lighttpd/lighttpd.conf
else
	cp  /etc/lighttpd/lighttpd.conf /etc/lighttpd/lighttpd.conf-original
fi
exit
cat /etc/lighttpd/lighttpd.conf | sed -e 's/^# *"mod_rewrite",/            "mod_rewrite",/ ; s/^ *server.document-root *= * "\/var\/www\/" *$/server.document-root = "\/var\/mserve\/www-root\/"/' > /tmp/lighttpd.conf
sudo cp /etc/lighttpd/lighttpd.conf /etc/lighttpd/lighttpd.conf-original
sudo cp /tmp/lighttpd.conf /etc/lighttpd/lighttpd.conf

# edit /etc/lighttpd/conf-enabled/10-fastcgi.conf 
sudo -i

if [ -f /etc/lighttpd/conf-available/10-fastcgi.conf-original ]; then
	cp /etc/lighttpd/conf-available/10-fastcgi.conf-original /etc/lighttpd/conf-available/10-fastcgi.conf
else
	cp /etc/lighttpd/conf-available/10-fastcgi.conf /etc/lighttpd/conf-available/10-fastcgi.conf-original
fi

cat > /etc/lighttpd/conf-available/10-fastcgi.conf <<FASTCGI
## FastCGI programs have the same functionality as CGI programs,
## but are considerably faster through lower interpreter startup
## time and socketed communication
##
## Documentation: /usr/share/doc/lighttpd-doc/fastcgi.txt.gz
##                http://www.lighttpd.net/documentation/fastcgi.html

server.modules   += ( "mod_fastcgi" )

fastcgi.debug = 1
fastcgi.server = (
    "/project.fcgi" =>
    (
        "django-fcgi" =>
        (
         "socket" => "/tmp/pp-dataservice-fcgi.sock",
         "check-local" => "disable",
        )
    )
)
\$HTTP["url"] =~ "^/dl50" {
        connection.kbytes-per-second=50
        secdownload.secret          = "ugeaptuk6"
        secdownload.document-root   = "/var/mserve/www-root/dl50"
        secdownload.uri-prefix      = "/dl50/"
        secdownload.timeout         = 60
}
\$HTTP["url"] =~ "^/dl100" {
        connection.kbytes-per-second=100
        secdownload.secret          = "ugeaptuk6"
        secdownload.document-root   = "/var/mserve/www-root/dl100"
        secdownload.uri-prefix      = "/dl100/"
        secdownload.timeout         = 60
}


url.rewrite-once = (
    "^(/dl100.*)\$" => "\$1",
    "^(/dl50.*)\$" => "\$1",
    "^(/media.*)\$" => "\$1",
    "^(/mservemedia.*)\$" => "\$1",
    "^(/mservedata.*)\$" => "\$1",
    "^(/mservethumbs.*)\$" => "\$1",
    "^/favicon\.ico\$" => "/media/favicon.ico",
    "^(/.*)\$" => "/project.fcgi\$1",
)
FASTCGI
exit

# enable fastcgi module
sudo lighttpd-enable-mod fastcgi

# modify mserve/restart.sh
# which actually does not need to be edited if the distribution assumes /opt/mserve instead of 
# other user, e.g. /opt/mserve

# changing permissions and running the rest from /opt/mserve as www-data
cd 
sudo cp -r mserve /opt/
sudo chown -R www-data:www-data /opt/mserve

# create media links
cd /var/mserve/www-root
sudo ln -s /usr/share/pyshared/django/contrib/admin/media
sudo ln -s /opt/mserve/pp-dataservice/mserve/media mservemedia

# Rabbit MQ Setup
sudo rabbitmqctl add_user myuser mypassword
sudo rabbitmqctl add_vhost myvhost
sudo rabbitmqctl set_permissions -p myvhost myuser ".*" ".*" ".*"

sudo /etc/init.d/lighttpd force-reload 

# update db, you need to provide information creating user and password
sudo -u www-data /opt/mserve/pp-dataservice/mserve/manage.py syncdb
#sudo -u www-data /opt/mserve/pp-dataservice/mserve/manage.py runserver

#########
#PART III
# Starting up service

# start up mserver
/opt/mserve/pp-dataservice/mserve/restart.sh

# Celery Startup
sudo -u www-data /opt/mserve/pp-dataservice/mserve/manage.py celeryd --verbosity=2 --loglevel=DEBUG

